@import '../../../theme.default';

$g-breakpoints: (
  small: $theme__breakpoints--small * 1px,
  medium: $theme__breakpoints--medium * 1px,
  large: $theme__breakpoints--large * 1px
);

@mixin hide($name) {
  @include breakpoint-at($name) {
    display: none;
  }
}

@mixin breakpoint-up($name) {
  @media (min-width: map-get($g-breakpoints, $name) + 1) {
    @content;
  }
}

@mixin breakpoint-down($name) {
  $keys: map-keys($g-breakpoints);
  $index: index($keys, $name) + 1;

  @if $index <= length($g-breakpoints) {
    $key: nth($keys, $index);

    @media (max-width: map-get($g-breakpoints, $key)) {
      @content;
    }
  }
}

@mixin breakpoint-between($lower, $upper) {
  @media (min-width: map-get($g-breakpoints, $lower)) and (max-width: map-get($g-breakpoints, $upper)) {
    @content;
  }
}

@mixin breakpoint-at($name) {
  $keys: map-keys($g-breakpoints);
  $index: index($keys, $name);

  @if ($index == 1) {
    @include breakpoint-down($name) {
      @content;
    }
  }

  @else if ($index == length($keys)) {
    @include breakpoint-up($name) {
      @content;
    }
  }

  @else {
    $prev: nth($keys, $index);
    $next: nth($keys, $index + 1);

    @include breakpoint-between($prev, $next) {
      @content;
    }
  }
}

@mixin aspect-ratio-up($width, $height) {
  @media (min-aspect-ratio: #{$width} / #{$height}) {
    @content;
  }
}

@mixin aspect-ratio-down($ratio) {
  @media (max-aspect-ratio: #{$width} / #{$height}) {
    @content;
  }
}

@mixin aspect-ratio-at($ratio) {
  @media (aspect-ratio: #{$width} / #{$height}) {
    @content;
  }
}

@mixin height-up($name) {
  @media (min-height: map-get($g-breakpoints, $name) + 1) {
    @content;
  }
}

@mixin height-down($name) {
  @media (max-height: map-get($g-breakpoints, $name) + 1) {
    @content;
  }
}

@mixin height-between($lower, $upper) {
  @media (min-height: map-get($g-breakpoints, $lower)) and (max-height: map-get($g-breakpoints, $upper)) {
    @content;
  }
}

@mixin height-at($name) {
  $keys: map-keys($g-breakpoints);
  $index: index($keys, $name);

  @if ($index == 1) {
    @include max-height($name) {
      @content;
    }
  }

  @else if ($index == length($keys)) {
    @include min-height($name) {
      @content;
    }
  }

  @else {
    $prev: nth($keys, $index);
    $next: nth($keys, $index + 1);

    @include height-between($prev, $next) {
      @content;
    }
  }
}
